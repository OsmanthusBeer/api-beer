// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  username  String    @unique
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  password      Password?
  Project       Project[]
  ProjectMember ProjectMember[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Project {
  id          String            @id @default(cuid())
  name        String            @db.VarChar(50)
  description String            @db.VarChar(255)
  visibility  ProjectVisibility @default(PRIVATE)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  creatorId String
  creator   User            @relation(fields: [creatorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  members   ProjectMember[]
  Interface Interface[]
}

enum ProjectVisibility {
  PUBLIC
  PRIVATE
}

model ProjectMember {
  id        String      @id @default(cuid())
  userId    String
  projectId String
  role      ProjectRole

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

enum ProjectRole {
  Owner
  Maintainer
  Developer
  Viewer
}

model Interface {
  id          String          @id @default(cuid())
  name        String          @db.VarChar(100)
  description String          @db.VarChar(255)
  url         String          @db.VarChar(255)
  urlParams   Json            @db.Json
  method      InterfaceMethod
  status      InterfaceStatus
  headers     Json            @db.Json
  query       Json            @db.Json
  body        Json            @db.Json
  tags        String
  versions    String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

// refs: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods
enum InterfaceMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}

enum InterfaceStatus {
  DRAFT
  PUBLISHED
}
